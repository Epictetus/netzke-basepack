source 'http://rubygems.org'

RAILS_VERSION = '3.1.0'
DM_VERSION    = '1.2.0'


case (ENV['ORM'] || '').downcase
when 'dm'
  # if we are using dm, skip activerecord by specifying everything else
  gem 'activesupport',      RAILS_VERSION, :require => 'active_support'
  gem 'actionpack',         RAILS_VERSION, :require => 'action_pack'
  gem 'actionmailer',       RAILS_VERSION, :require => 'action_mailer'
  gem 'railties',           RAILS_VERSION, :require => 'rails'

  gem 'dm-rails',           DM_VERSION
  gem 'dm-mysql-adapter',   DM_VERSION
  # FIXME: need dm-is-list
else
  # default case: use ar
  # get just the rails gem
  gem 'rails',              RAILS_VERSION
  gem 'mysql2'
  gem 'acts_as_list'
end

# need explicitly
gem 'tzinfo'

gem 'netzke-core',        :path => File.expand_path('../vendor/gems/netzke-core', __FILE__)
#gem 'netzke-persistence', :path => File.expand_path('../vendor/gems/netzke-persistence', __FILE__)

# We need to manually include these Basepack dependencies, because we're not including Basepack as a gem
gem 'will_paginate', '~>3.0'


# Bundle gems for the local environment. Make sure to
# put test-only gems in this group so their generators
# and rake tasks are available in development mode:
group :development, :test do
  gem 'capybara'
  gem 'cucumber-rails'
  gem 'cucumber'
  gem 'rspec-rails'
  gem 'spork'
  gem 'launchy'    # So you can do Then show me the page
  gem 'factory_girl'
end

group :development do
end

group :test do
  gem 'sqlite3-ruby', :require => 'sqlite3'
  case (ENV['ORM'] || '').downcase
  when 'dm'
    # if we are using dm, we need the sqlite adapter
    gem 'dm-sqlite-adapter', DM_VERSION
  else
    # default case: use ar
    # nothing to do here
  end
  gem 'pickle'
  gem 'database_cleaner'
end
