source 'http://rubygems.org'

RAILS_VERSION = '3.1.0'
DM_VERSION    = '1.2.0'

# we are getting AR still regardless of ORM env, because netzke-persistence needs it
gem 'rails',                RAILS_VERSION
gem 'mysql2'

case (ENV['ORM'] || '').downcase
when 'dm'
  # DataMapper
  gem 'dm-rails',           DM_VERSION
  gem 'dm-validations',     DM_VERSION # needed for manual validations
  gem 'dm-types',           DM_VERSION # needed for json columns
  gem 'dm-mysql-adapter',   DM_VERSION
end

gem 'netzke-core',        :path => File.expand_path('../vendor/gems/netzke-core', __FILE__)
gem 'netzke-persistence', :path => File.expand_path('../vendor/gems/netzke-persistence', __FILE__)

# We need to manually include these Basepack dependencies, because we're not including Basepack as a gem
# gem 'will_paginate', :git=> "git://github.com/mislav/will_paginate.git"


# Bundle gems for the local environment. Make sure to
# put test-only gems in this group so their generators
# and rake tasks are available in development mode:
group :development, :test do
  gem 'capybara'
  gem 'cucumber-rails'
  gem 'cucumber'
  gem 'rspec-rails'
  gem 'spork'
  gem 'launchy'    # So you can do Then show me the page
  gem 'factory_girl'
end

group :development do
  gem "guard", ">= 0.6.2"
  gem "guard-bundler", ">= 0.1.3"
  gem "guard-rails", ">= 0.0.3"
  gem "guard-livereload", ">= 0.3.0"
  gem "guard-rspec", ">= 0.4.3"
  gem "guard-cucumber", ">= 0.6.1"
end

group :test do
  gem 'sqlite3-ruby', :require => 'sqlite3'
  case (ENV['ORM'] || '').downcase
  when 'dm'
    # if we are using dm, we need the sqlite adapter
    gem 'dm-sqlite-adapter', DM_VERSION
  else
    # default case: use ar
    # nothing to do here
  end
  gem 'pickle'
  gem 'database_cleaner'
end
